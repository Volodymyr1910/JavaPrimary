package HW8;

import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

//Задание 2. Подсчитайте частоту использования слов в предложении Л.Н.Толстого:
// "В 1800-х годах, в те времена, когда не было еще ни железных, ни шоссейных дорог, ни газового, ни стеаринового света, ни пружинных низких диванов, ни мебели без лаку, ни разочарованных юношей со стеклышками, ни либеральных философов-женщин, ни милых дам-камелий, которых так много развелось в наше время, – в те наивные времена, когда из Москвы, выезжая в Петербург в повозке или карете, брали с собой целую кухню домашнего приготовления, ехали восемь суток по мягкой, пыльной или грязной дороге и верили в пожарские котлеты, в валдайские колокольчики и бублики, – когда в длинные осенние вечера нагорали сальные свечи, освещая семейные кружки из двадцати и тридцати человек, на балах в канделябры вставлялись восковые и спермацетовые свечи, когда мебель ставили симметрично, когда наши отцы были еще молоды не одним отсутствием морщин и седых волос, а стрелялись за женщин и из другого угла комнаты бросались поднимать нечаянно и не нечаянно уроненные платочки, наши матери носили коротенькие талии и огромные рукава и решали семейные дела выниманием билетиков, когда прелестные дамы-камелии прятались от дневного света, – в наивные времена масонских лож, мартинистов, тугендбунда, во времена Милорадовичей, Давыдовых, Пушкиных, – в губернском городе К. был съезд помещиков, и кончались дворянские выборы."
//
//// Удаление знаков препинания и приведение к нижнему регистру text = text.replaceAll("[^a-zA-Z0-9\s]", "").toLowerCase();
public class Sentence {


// Удаление знаков препинания и приведение к нижнему регистру text = text.replaceAll("[^a-zA-Z0-9\s]", "").toLowerCase();


    public static void main(String[] args) {
        String text = "В 1800-х годах, в те времена, когда не было еще ни железных, ни шоссейных дорог, ни газового, ни стеаринового света, ни пружинных низких диванов, ни мебели без лаку, ни разочарованных юношей со стеклышками, ни либеральных философов-женщин, ни милых дам-камелий, которых так много развелось в наше время, – в те наивные времена, когда из Москвы, выезжая в Петербург в повозке или карете, брали с собой целую кухню домашнего приготовления, ехали восемь суток по мягкой, пыльной или грязной дороге и верили в пожарские котлеты, в валдайские колокольчики и бублики, – когда в длинные осенние вечера нагорали сальные свечи, освещая семейные кружки из двадцати и тридцати человек, на балах в канделябры вставлялись восковые и спермацетовые свечи, когда мебель ставили симметрично, когда наши отцы были еще молоды не одним отсутствием морщин и седых волос, а стрелялись за женщин и из другого угла комнаты бросались поднимать нечаянно и не нечаянно уроненные платочки, наши матери носили коротенькие талии и огромные рукава и решали семейные дела выниманием билетиков, когда прелестные дамы-камелии прятались от дневного света, – в наивные времена масонских лож, мартинистов, тугендбунда, во времена Милорадовичей, Давыдовых, Пушкиных, – в губернском городе К. был съезд помещиков, и кончались дворянские выборы.";

        // delete all non-digit-alphabet symbols and double-space
        text = text.replaceAll("[^а-яА-Я0-9] ", " ").toLowerCase();
        text = text.replace("  ", " ");
        System.out.println(text);

        //put text in to array
        String str [] = text.split(" ");

        // create map : key - numbers, values - words from text
        int valuetmp = 0;
        Map<Integer, String> textMap = new TreeMap<>();
        for (String st : str) {
            textMap.put(valuetmp++,st);
        }//end for
        textMap.forEach((key, value) -> System.out.println("Key: " + key + " value: " + value));
        System.out.println("---------------------------- size ------------------------------------");
        System.out.println(textMap.size());

        // create new map : keys - words from text, values - counting
        Map<String, Integer> res = new HashMap<>();
        valuetmp = 1;
        int step = 1;
        for (String value : textMap.values()) {
            if(res.containsKey(value)) res.put(value, res.get(value) + step);
            else res.put(value,valuetmp);
        }//end for

        System.out.println("=============================================================================================================================================");

        res.forEach((key, value) -> System.out.println("word " + key + " meets " + value + " times."));
        System.out.println("---------------------------- size ------------------------------------");
        System.out.println(res.size());
        for (String key : res.keySet()) {
            if(res.get(key) != 1)  System.out.println("word " + key + " meets " + res.get(key) + " times.");
        }

    }//end main


}//end class
